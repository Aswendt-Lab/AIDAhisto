#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    May 02, 2019 01:11:59 PM CEST  platform: Darwin

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import AIDAhisto_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    AIDAhisto_gui_support.set_Tk_var()
    top = ADAIhisto_top (root)
    AIDAhisto_gui_support.init(root, top)
    root.mainloop()

w = None
def create_ADAIhisto_top(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    AIDAhisto_gui_support.set_Tk_var()
    top = ADAIhisto_top (w)
    AIDAhisto_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ADAIhisto_top():
    global w
    w.destroy()
    w = None

class ADAIhisto_top:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font11 = "-family {.SF NS Text} -size 14"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("592x406+482+130")
        top.title("AIDAhisto")
        top.configure(background="#d9d9d9")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.068, rely=0.049, relheight=0.135
                , relwidth=0.878)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Input image''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(width=520)

        self.input_en = tk.Entry(self.Labelframe1)
        self.input_en.place(relx=0.019, rely=0.364, height=27, relwidth=0.754
                , bordermode='ignore')
        self.input_en.configure(background="white")
        self.input_en.configure(font="-family {Monaco} -size 11")
        self.input_en.configure(foreground="#000000")
        self.input_en.configure(insertbackground="black")
        self.input_en.configure(textvariable=AIDAhisto_gui_support.inputFilename)
        self.input_en.configure(width=392)

        self.TButton1 = ttk.Button(self.Labelframe1)
        self.TButton1.place(relx=0.808, rely=0.364, height=24, width=87
                , bordermode='ignore')
        self.TButton1.configure(command=AIDAhisto_gui_support.openfile_cmd)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Open''')
        self.TButton1.configure(cursor="fleur")

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.338, rely=0.222, relheight=0.333
                , relwidth=0.321)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Options''')
        self.Labelframe2.configure(background="#d9d9d9")
        self.Labelframe2.configure(width=190)

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.fast_bt = ttk.Checkbutton(self.Labelframe2)
        self.fast_bt.place(relx=0.105, rely=0.222, relwidth=0.742, relheight=0.0
                , height=22, bordermode='ignore')
        self.fast_bt.configure(variable=AIDAhisto_gui_support.fast)
        self.fast_bt.configure(command=AIDAhisto_gui_support.fast_cmd)
        self.fast_bt.configure(takefocus="")
        self.fast_bt.configure(text='''Fast detection''')
        self.fast_bt.configure(width=141)

        self.dark_bt = ttk.Checkbutton(self.Labelframe2)
        self.dark_bt.place(relx=0.105, rely=0.444, relwidth=0.742, relheight=0.0
                , height=22, bordermode='ignore')
        self.dark_bt.configure(variable=AIDAhisto_gui_support.dark)
        self.dark_bt.configure(command=AIDAhisto_gui_support.dark_cmd)
        self.dark_bt.configure(takefocus="")
        self.dark_bt.configure(text='''Invert Image''')
        self.dark_bt.configure(width=141)

        self.bar_bt = ttk.Checkbutton(self.Labelframe2)
        self.bar_bt.place(relx=0.105, rely=0.667, relwidth=0.742, relheight=0.0
                , height=22, bordermode='ignore')
        self.bar_bt.configure(variable=AIDAhisto_gui_support.bar)
        self.bar_bt.configure(command=AIDAhisto_gui_support.bar_cmd)
        self.bar_bt.configure(takefocus="")
        self.bar_bt.configure(text='''Non-circular cells''')
        self.bar_bt.configure(width=141)

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.068, rely=0.222, relheight=0.333
                , relwidth=0.236)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Color Channel''')
        self.Labelframe3.configure(background="#d9d9d9")
        self.Labelframe3.configure(width=140)

        self.style.map('TRadiobutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.red_rd = ttk.Radiobutton(self.Labelframe3)
        self.red_rd.place(relx=0.143, rely=0.222, relwidth=0.714, relheight=0.0
                , height=22, bordermode='ignore')
        self.red_rd.configure(variable=AIDAhisto_gui_support.red_v)
        self.red_rd.configure(command=AIDAhisto_gui_support.red_cmd)
        self.red_rd.configure(takefocus="")
        self.red_rd.configure(text='''Red''')
        self.red_rd.configure(width=100)

        self.green_rb = ttk.Radiobutton(self.Labelframe3)
        self.green_rb.place(relx=0.143, rely=0.444, relwidth=0.714, relheight=0.0
                , height=22, bordermode='ignore')
        self.green_rb.configure(variable=AIDAhisto_gui_support.green_v)
        self.green_rb.configure(command=AIDAhisto_gui_support.green_cmd)
        self.green_rb.configure(takefocus="")
        self.green_rb.configure(text='''Green''')
        self.green_rb.configure(width=100)

        self.blue_rb = ttk.Radiobutton(self.Labelframe3)
        self.blue_rb.place(relx=0.143, rely=0.667, relwidth=0.714, relheight=0.0
                , height=22, bordermode='ignore')
        self.blue_rb.configure(variable=AIDAhisto_gui_support.blue_v)
        self.blue_rb.configure(command=AIDAhisto_gui_support.blue_cmd)
        self.blue_rb.configure(takefocus="")
        self.blue_rb.configure(text='''Blue''')
        self.blue_rb.configure(width=100)

        self.Labelframe4 = tk.LabelFrame(top)
        self.Labelframe4.place(relx=0.676, rely=0.222, relheight=0.16
                , relwidth=0.27)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(foreground="black")
        self.Labelframe4.configure(text='''Cell width [pixel]''')
        self.Labelframe4.configure(background="#d9d9d9")
        self.Labelframe4.configure(width=160)

        self.width_scale = ttk.Scale(self.Labelframe4, from_=1, to=50.0)
        self.width_scale.place(relx=0.063, rely=0.462, relwidth=0.563
                , relheight=0.0, height=24, bordermode='ignore')
        self.width_scale.configure(command=AIDAhisto_gui_support.width_cmd)
        self.width_scale.configure(variable=AIDAhisto_gui_support.cell_widthV)
        self.width_scale.configure(value="1")
        self.width_scale.configure(length="90")
        self.width_scale.configure(takefocus="")

        self.cell_width_entry = tk.Entry(self.Labelframe4)
        self.cell_width_entry.place(relx=0.625, rely=0.462, height=27
                , relwidth=0.325, bordermode='ignore')
        self.cell_width_entry.configure(background="white")
        self.cell_width_entry.configure(font="-family {Monaco} -size 11")
        self.cell_width_entry.configure(foreground="#000000")
        self.cell_width_entry.configure(insertbackground="black")
        self.cell_width_entry.configure(readonlybackground="#eaeaea")
        self.cell_width_entry.configure(state='readonly')
        self.cell_width_entry.configure(textvariable=AIDAhisto_gui_support.cell_width_entry)
        self.cell_width_entry.configure(width=52)

        self.Labelframe5 = tk.LabelFrame(top)
        self.Labelframe5.place(relx=0.676, rely=0.394, relheight=0.16
                , relwidth=0.27)
        self.Labelframe5.configure(relief='groove')
        self.Labelframe5.configure(foreground="black")
        self.Labelframe5.configure(text='''Cell distance [pixels]''')
        self.Labelframe5.configure(background="#d9d9d9")
        self.Labelframe5.configure(width=160)

        self.dist_scale = ttk.Scale(self.Labelframe5, from_=0.5, to=50.0)
        self.dist_scale.place(relx=0.063, rely=0.462, relwidth=0.563
                , relheight=0.0, height=24, bordermode='ignore')
        self.dist_scale.configure(command=AIDAhisto_gui_support.dist_cmd)
        self.dist_scale.configure(variable=AIDAhisto_gui_support.min_dist)
        self.dist_scale.configure(value="1")
        self.dist_scale.configure(length="90")
        self.dist_scale.configure(takefocus="")

        self.dis_en = tk.Entry(self.Labelframe5)
        self.dis_en.place(relx=0.625, rely=0.462, height=27, relwidth=0.325
                , bordermode='ignore')
        self.dis_en.configure(background="white")
        self.dis_en.configure(font="-family {Monaco} -size 11")
        self.dis_en.configure(foreground="#000000")
        self.dis_en.configure(insertbackground="black")
        self.dis_en.configure(readonlybackground="#eaeaea")
        self.dis_en.configure(state='readonly')
        self.dis_en.configure(textvariable=AIDAhisto_gui_support.cell_dist_entry)
        self.dis_en.configure(width=52)

        self.menubar = tk.Menu(top, font=('.SF NS Text', 14, ), bg=_bgcolor
                ,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Labelframe7 = tk.LabelFrame(top)
        self.Labelframe7.place(relx=0.068, rely=0.567, relheight=0.357
                , relwidth=0.591)
        self.Labelframe7.configure(relief='groove')
        self.Labelframe7.configure(foreground="black")
        self.Labelframe7.configure(text='''Additional information''')
        self.Labelframe7.configure(background="#d9d9d9")
        self.Labelframe7.configure(width=350)

        self.roi_en = tk.Entry(self.Labelframe7)
        self.roi_en.place(relx=0.029, rely=0.138, height=27, relwidth=0.691
                , bordermode='ignore')
        self.roi_en.configure(background="white")
        self.roi_en.configure(font="-family {Monaco} -size 11")
        self.roi_en.configure(foreground="#000000")
        self.roi_en.configure(insertbackground="black")
        self.roi_en.configure(textvariable=AIDAhisto_gui_support.roi_inV)
        self.roi_en.configure(width=242)

        self.ref_en = tk.Entry(self.Labelframe7)
        self.ref_en.place(relx=0.029, rely=0.414, height=27, relwidth=0.691
                , bordermode='ignore')
        self.ref_en.configure(background="white")
        self.ref_en.configure(font="-family {Monaco} -size 11")
        self.ref_en.configure(foreground="#000000")
        self.ref_en.configure(insertbackground="black")
        self.ref_en.configure(textvariable=AIDAhisto_gui_support.ref_inV)
        self.ref_en.configure(width=242)

        self.Entry4 = tk.Entry(self.Labelframe7)
        self.Entry4.place(relx=0.029, rely=0.69, height=27, relwidth=0.691
                , bordermode='ignore')
        self.Entry4.configure(background="white")
        self.Entry4.configure(font="-family {Monaco} -size 11")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(textvariable=AIDAhisto_gui_support.listofRoiNames)
        self.Entry4.configure(width=242)

        self.roi_bt = ttk.Button(self.Labelframe7)
        self.roi_bt.place(relx=0.743, rely=0.138, height=24, width=77
                , bordermode='ignore')
        self.roi_bt.configure(command=AIDAhisto_gui_support.roi_cmd)
        self.roi_bt.configure(takefocus="")
        self.roi_bt.configure(text='''Open''')
        self.roi_bt.configure(width=77)

        self.ref_bt = ttk.Button(self.Labelframe7)
        self.ref_bt.place(relx=0.743, rely=0.414, height=24, width=77
                , bordermode='ignore')
        self.ref_bt.configure(command=AIDAhisto_gui_support.ref_cmd)
        self.ref_bt.configure(takefocus="")
        self.ref_bt.configure(text='''Open''')
        self.ref_bt.configure(width=77)

        self.list_bt = ttk.Button(self.Labelframe7)
        self.list_bt.place(relx=0.743, rely=0.69, height=24, width=77
                , bordermode='ignore')
        self.list_bt.configure(command=AIDAhisto_gui_support.list_cmd)
        self.list_bt.configure(takefocus="")
        self.list_bt.configure(text='''Open''')
        self.list_bt.configure(width=77)

        self.apply_bt = ttk.Button(top)
        self.apply_bt.place(relx=0.709, rely=0.788, height=44, width=127)
        self.apply_bt.configure(command=AIDAhisto_gui_support.apply_cmd)
        self.apply_bt.configure(takefocus="")
        self.apply_bt.configure(text='''Apply''')
        self.apply_bt.configure(width=127)

        self.Labelframe6 = tk.LabelFrame(top)
        self.Labelframe6.place(relx=0.676, rely=0.567, relheight=0.16
                , relwidth=0.27)
        self.Labelframe6.configure(relief='groove')
        self.Labelframe6.configure(foreground="black")
        self.Labelframe6.configure(text='''Threshold''')
        self.Labelframe6.configure(background="#d9d9d9")
        self.Labelframe6.configure(width=160)

        self.threshold_scale = ttk.Scale(self.Labelframe6, from_=5, to=50)
        self.threshold_scale.place(relx=0.063, rely=0.462, relwidth=0.563
                , relheight=0.0, height=24, bordermode='ignore')
        self.threshold_scale.configure(command=AIDAhisto_gui_support.threshold_cmd)
        self.threshold_scale.configure(variable=AIDAhisto_gui_support.threshold)
        self.threshold_scale.configure(value="10")
        self.threshold_scale.configure(length="90")
        self.threshold_scale.configure(takefocus="")

        self.thres_entry = tk.Entry(self.Labelframe6)
        self.thres_entry.place(relx=0.625, rely=0.462, height=27, relwidth=0.325
                , bordermode='ignore')
        self.thres_entry.configure(background="white")
        self.thres_entry.configure(font="-family {Monaco} -size 11")
        self.thres_entry.configure(foreground="#000000")
        self.thres_entry.configure(insertbackground="black")
        self.thres_entry.configure(readonlybackground="#eaeaea")
        self.thres_entry.configure(state='readonly')
        self.thres_entry.configure(textvariable=AIDAhisto_gui_support.threshold_entry)
        self.thres_entry.configure(width=52)

if __name__ == '__main__':
    vp_start_gui()





